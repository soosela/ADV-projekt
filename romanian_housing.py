import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

# Be√°ll√≠t√°sok
sns.set(style="ticks")  # Elt√°vol√≠tja a h√°tt√©r sz√≠neket
plt.rcParams.update({
    "axes.titlesize": 18,
    "axes.labelsize": 14,
    "xtick.labelsize": 12,
    "ytick.labelsize": 12,
    "figure.figsize": (16, 8),  # Nagyobb √°bra
    "axes.facecolor": "white",  # Feh√©r h√°tt√©r a grafikonoknak
    "figure.facecolor": "white",  # Feh√©r h√°tt√©r a teljes √°bra m√∂g√∂tt
    "grid.alpha": 0.2  # A h√°l√≥zat (grid) √°ttetsz≈ës√©ge
})
output_dir = "abra"
os.makedirs(output_dir, exist_ok=True)

# üîΩ Adatok bet√∂lt√©se
df = pd.read_csv("lakas_adatbazis_2010_2024.csv")

# üîß Az √âv oszlopb√≥l csak a sz√°mot vessz√ºk ki (pl. '2010-Q1' -> 2010)
df["√âv"] = df["√âv"].astype(str).str[:4].astype(int)

# üîß J√∂vedelem oszlop √°tnevez√©se
df.rename(columns={"Nett√≥ j√∂vedelem (EUR/h√≥)": "J√∂vedelem (EUR/h√≥)"}, inplace=True)

# A k√∂vetkez≈ë l√©p√©sben Pivot t√°bl√°t k√©sz√≠t√ºnk, hogy t√∂bb oszlopot jelen√≠thess√ºnk meg:

# 1. Lak√°s√°rak id≈ëbeli alakul√°sa - Oszlopdiagram (Pivot t√°bla haszn√°lata)
plt.figure(figsize=(18, 8))  # Nagyobb √°bra
df_pivot_lakasar = df.pivot_table(index="√âv", columns="V√°ros", values="Lak√°s√°r (EUR/m¬≤)", aggfunc="mean")
df_pivot_lakasar.plot(kind="bar", ax=plt.gca(), width=0.8)  # Oszlopdiagram
plt.title("Lak√°s√°rak alakul√°sa v√°rosonk√©nt")
plt.ylabel("EUR/m¬≤")
plt.xlabel("√âv")
plt.xticks(rotation=45)
plt.legend(title='V√°ros', loc='upper left', bbox_to_anchor=(1, 1))  # Jelmagyar√°zat pozicion√°l√°sa
plt.tight_layout()
plt.savefig(f"{output_dir}/1_lakasarak_ido_bar.png")
plt.close()

# 2. B√©rleti d√≠jak id≈ëbeli alakul√°sa - Oszlopdiagram (Pivot t√°bla haszn√°lata)
plt.figure(figsize=(18, 8))  # Nagyobb √°bra
df_pivot_berletidij = df.pivot_table(index="√âv", columns="V√°ros", values="B√©rleti d√≠j (EUR/h√≥)", aggfunc="mean")
df_pivot_berletidij.plot(kind="bar", ax=plt.gca(), width=0.8)  # Oszlopdiagram
plt.title("B√©rleti d√≠jak alakul√°sa v√°rosonk√©nt")
plt.ylabel("EUR/h√≥")
plt.xlabel("√âv")
plt.xticks(rotation=45)
plt.legend(title='V√°ros', loc='upper left', bbox_to_anchor=(1, 1))  # Jelmagyar√°zat pozicion√°l√°sa
plt.tight_layout()
plt.savefig(f"{output_dir}/2_berletidij_ido_bar.png")
plt.close()

# 3. J√∂vedelmek id≈ëbeli alakul√°sa - Oszlopdiagram (Pivot t√°bla haszn√°lata)
plt.figure(figsize=(18, 8))  # Nagyobb √°bra
df_pivot_jovedelem = df.pivot_table(index="√âv", columns="V√°ros", values="J√∂vedelem (EUR/h√≥)", aggfunc="mean")
df_pivot_jovedelem.plot(kind="bar", ax=plt.gca(), width=0.8)  # Oszlopdiagram
plt.title("J√∂vedelmek alakul√°sa v√°rosonk√©nt")
plt.ylabel("EUR/h√≥")
plt.xlabel("√âv")
plt.xticks(rotation=45)
plt.legend(title='V√°ros', loc='upper left', bbox_to_anchor=(1, 1))  # Jelmagyar√°zat pozicion√°l√°sa
plt.tight_layout()
plt.savefig(f"{output_dir}/3_jovedelem_ido_bar.png")
plt.close()

# 4. Lak√°s√°r √©s b√©rleti d√≠j kapcsolata
plt.figure(figsize=(14, 8))
sns.scatterplot(data=df, x="Lak√°s√°r (EUR/m¬≤)", y="B√©rleti d√≠j (EUR/h√≥)", hue="V√°ros", 
                style="Lak√°st√≠pus", alpha=0.7, s=100, marker="o")  # Pontok kiemel√©se
plt.title("Lak√°s√°r √©s b√©rleti d√≠j kapcsolata")
plt.legend(title='V√°ros', loc='upper left', bbox_to_anchor=(1, 1))  # Jelmagyar√°zat pozicion√°l√°sa
plt.tight_layout()
plt.savefig(f"{output_dir}/4_lakasar_vs_berletidij.png")
plt.close()

# 5. Megfizethet≈ës√©g (Lak√°s√°r / J√∂vedelem)
df["Megfizethet≈ës√©g"] = df["Lak√°s√°r (EUR/m¬≤)"] / df["J√∂vedelem (EUR/h√≥)"]
plt.figure(figsize=(18, 8))  # Nagyobb √°bra
df_pivot_megfizethetoseg = df.pivot_table(index="√âv", columns="V√°ros", values="Megfizethet≈ës√©g", aggfunc="mean")
df_pivot_megfizethetoseg.plot(kind="bar", ax=plt.gca(), width=0.8)  # Oszlopdiagram
plt.title("Megfizethet≈ës√©g alakul√°sa v√°rosonk√©nt")
plt.ylabel("Lak√°s√°r / J√∂vedelem")
plt.xlabel("√âv")
plt.xticks(rotation=45)
plt.legend(title='V√°ros', loc='upper left', bbox_to_anchor=(1, 1))  # Jelmagyar√°zat pozicion√°l√°sa
plt.tight_layout()
plt.savefig(f"{output_dir}/5_megfizethetoseg.png")
plt.close()

# 6. Lak√°s√°r h≈ët√©rk√©p √©v √©s v√°ros szerint
pivot = df.pivot_table(index="V√°ros", columns="√âv", values="Lak√°s√°r (EUR/m¬≤)", aggfunc="mean")
plt.figure(figsize=(18, 8))  # Nagyobb √°bra
sns.heatmap(pivot, cmap="YlOrBr", annot=True, fmt=".1f", cbar_kws={'label': 'EUR/m¬≤'})
plt.title("Lak√°s√°rak h≈ët√©rk√©pe (√©v √©s v√°ros szerint)")
plt.tight_layout()
plt.savefig(f"{output_dir}/6_heatmap_lakasar.png")
plt.close()

# 7. Munkan√©lk√ºlis√©gi r√°ta id≈ëbeli alakul√°sa
plt.figure(figsize=(18, 8))  # Nagyobb √°bra
sns.lineplot(data=df, x="√âv", y="Munkan√©lk√ºlis√©gi r√°ta (%)", hue="V√°ros", 
             style="V√°ros", markers=False, dashes=False, linewidth=2)
plt.title("Munkan√©lk√ºlis√©gi r√°ta alakul√°sa v√°rosonk√©nt")
plt.ylabel("%")
plt.xlabel("√âv")
plt.xticks(sorted(df["√âv"].unique()))
plt.legend(title='V√°ros', loc='upper left', bbox_to_anchor=(1, 1))  # Jelmagyar√°zat pozicion√°l√°sa
plt.tight_layout()
plt.savefig(f"{output_dir}/7_munkanelkuliseg_ido.png")
plt.close()

print("‚úÖ Az √∂sszes vizualiz√°ci√≥ elmentve az 'abra/' mapp√°ba.")
